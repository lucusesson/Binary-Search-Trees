##
## ***************************************************
## Lucus Esson (20615533)
## CS 116 Winter 2016
## Assignment 7, Problem 1
## ***************************************************
##

import check

# sym_tri_num (n) consumes a natural number n and produces a list of all 
#    symmetric trinary numbers of length n. Where the list is in increasing
#    numerical order.
# sym_tri_num: Nat -> (listof Nat)
# Examples:
# sym_tri_num(1) => ['0', '1', '2']
# sym_tri_num(3) => ['000','010','020','101','111','121','202','212','222']

def sym_tri_num (n):
    num = "0" * n
    return make_list(num)

def make_list(number):
    if number == len(number) * 2:
        pass

def add(n):
    if n == "":
        return 0
    else:
        return n[0] + add(n[1:])
    
    